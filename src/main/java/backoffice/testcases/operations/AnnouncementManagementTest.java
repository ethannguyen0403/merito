package backoffice.testcases.operations;

import com.paltech.driver.DriverManager;
import com.paltech.utils.DateUtils;
import backoffice.common.*;
import org.testng.Assert;
import org.testng.annotations.Test;
import backoffice.pages.bo._components.AlertMessageBox;
import backoffice.pages.bo._components.AppConfirmPopup;
import backoffice.pages.bo._components.StaticConfirmPopup;
import backoffice.pages.bo.operations.AnnouncementManagementPage;
import baseTest.BaseCaseMerito;
import util.testraildemo.TestRails;

public class AnnouncementManagementTest extends BaseCaseMerito{

    /**
     * @title: Validate error popup display when create announcement without input any data
     * @pre-condition:
     *           1. Log in BO
     * @steps:  1. Access Operations > Announcement Management
     *          2. Click Save button
     * @expect: 1 Verify error displays English translation cannot be empty
     */
    @Test (groups = {"smoke"})
    public void BO_Operations_Announcement_Management_001(){
        log("@title: Validate error popup display when create announcement without input any data");
        log("Step 1. Access Operations > Announcement Management");
        AnnouncementManagementPage page = backofficeHomePage.navigateAnnouncementManagement();

        log("Step  1 Verify UI display");
        Assert.assertTrue(page.ddbSeenBy.isDisplayed(),"FAILED! Seen By dopdown box not display");
        Assert.assertTrue(page.txtSequence.isDisplayed(),"FAILED! Sequence textbox not display");
        Assert.assertTrue(page.btnSave.isDisplayed(),"FAILED! Submit button not display");

        log("INFO: Executed completely");
    }

    /**
     * @title: Validate can add Edit and Delete Announcement
     * @pre-condition:
     *           1. Log in BO
     * @steps:  1. Access Operations > Announcement Management
     *          2. Enter message into English textbox
     *          3. Select Seen By: Affiliate, Sequence: 1
     *          4 Click Save button
     *          5. Click Hide and set sequence to 10 and click Set button
     *          6 Click on Edit button of the new announcement
     *          7. Update the message to the new message and click Save button
     *          8 Click on Del button of the message and confirm delete
     * @expect: 1. Verify announcement is added,
     * - Create date display as today e.g. Fri, 09 Oct 2020.
     * - Buttons : Hide, Edit, Del
     * - Seen by , Sequence display correctly, English column display correct input data
     *          2. Show button display when click on Hide, and Sequence is correctly
     *          3. The message display in English textbox
     *          4. Announcement message is update correctly
     *          5 Announcement is deleted
     */
    @Test (groups = {"regression_qc"})
    public void BO_Operations_Announcement_Management_003(){
        log("@title: Validate can add Edit and Delete Announcement");
        log("Step 1. Access Operations > Announcement Management");
        String announcementMsg = "This is announcement message generated by auto script in " + DateUtils.getDate(0,"dd/MM/yyyy HH:mm:ss", backoffice.common.BOConstants.GMT_FOUR);
        //String announcementMsgUpdate="This is announcement message generated by auto script in 18/06/2021 11:45:02";
       String announcementMsgUpdate = announcementMsg + " Update";
       String sequence = "1";
        String seenBy = "Partner";
        String createDate = DateUtils.getDate(0,"EEE, dd MMM YYYY", backoffice.common.BOConstants.GMT_FOUR);

        AnnouncementManagementPage page = backofficeHomePage.navigateAnnouncementManagement();
        log("Step 2. Enter message into English textbox");
        log("Step 3. Select Seen By: Affiliate, Sequence: 1");
        log("Step 4 Click Save button");
        page.add(announcementMsg,seenBy,sequence);

        AlertMessageBox alMessage = new AlertMessageBox();
        String message = alMessage.getSuccessAlert();
        Assert.assertTrue( message.contains("Create Successful"),"FAILED! Update message is not displayed");

        log("Verify 1. Verify announcement is added,\n" +
                "     * - Create date display as today e.g. Fri, 09 Oct 2020.\n" +
                "     * - Buttons : Hide, Edit, Del\n" +
                "     * - Seen by , Sequence display correctly, English column display correct input data");
        page.waitSpinIcon();
        Assert.assertTrue(page.verifyAnnouncementInfo(announcementMsg,createDate,seenBy,sequence),"FAILED! Incorrect info after create an announcement");

        log("Step 5. Click Hide and set sequence to 10 and click Set button");
        page.updateAnnouncementInfo(announcementMsg, AnnouncementManagementPage.Actions.HIDE,"","","10");
        message = alMessage.getSuccessAlert();
        page.waitSpinIcon();

        log("Verify 2. Show button display when click on Hide, and Sequence is correctly");
        Assert.assertTrue( message.contains("Update successful"  ),"FAILED! Update message is not displayed");
        Assert.assertTrue(page.isShowButtonDisplayed(announcementMsg),"FAILED! Incorrect info after create an announcement");
        Assert.assertTrue(page.verifyAnnouncementInfo(announcementMsg,createDate,seenBy,"10"),"FAILED! Incorrect info after create an announcement");

        log("Step 6 Click on Edit button of the new announcement");
        log("Step 7. Update the message to the new message and click Save button");
        page.updateAnnouncementInfo(announcementMsg, AnnouncementManagementPage.Actions.EDIT,announcementMsgUpdate,"","");

        log("Verify 4. Announcement message is update correctly");

        Assert.assertTrue(page.verifyAnnouncementInfo(announcementMsgUpdate,createDate,seenBy,"10"),"FAILED! Incorrect info after create an announcement");
        log("Step 8 Click on Del button of the message and confirm delete");
        page.updateAnnouncementInfo(announcementMsgUpdate, AnnouncementManagementPage.Actions.DELETE,"","","");

        log("Verify 5.1 Verify Message confimr is display");
        AppConfirmPopup confirmPopup = AppConfirmPopup.xpath("//app-dialog-confirm-announcement");
        Assert.assertEquals(confirmPopup.getContent(),BOConstants.Operations.AnnouncementManagement.MSG_CONFIRM_DELETE_ANNOUNCEMENT,"FAILED! Confirm to delete message is incorrect");
       confirmPopup.confirm();

        log("Verify 5.2 Announcement is deleted");
        message = alMessage.getSuccessAlert();
        Assert.assertTrue( message.contains("Delete successful"),"FAILED! Update message is not displayed");
        page.waitSpinIcon();

        log("Verify 5.3 Announcement is not display");
        Assert.assertFalse(page.verifyAnnouncementInfo(announcementMsgUpdate,createDate,seenBy,"10"),"FAILED! The issue does not display ");

        log("INFO: Executed completely");
    }
    /**
     * @title: Validate can add Edit and Delete Announcement
     * @pre-condition:
     *           1. Log in BO
     * @steps:  1. Access Operations > Announcement Management
     *          2. Enter message into English textbox
     *          3. Select Seen By: Affiliate, Sequence: 1
     *          4 Click Save button
     *          5. Click Hide and set sequence to 10 and click Set button
     *          6 Click on Edit button of the new announcement
     *          7. Update the message to the new message and click Save button
     *          8 Click on Del button of the message and confirm delete
     * @expect: 1. Verify announcement is added,
     * - Create date display as today e.g. Fri, 09 Oct 2020.
     * - Buttons : Hide, Edit, Del
     * - Seen by , Sequence display correctly, English column display correct input data
     *          2. Show button display when click on Hide, and Sequence is correctly
     *          3. The message display in English textbox
     *          4. Announcement message is update correctly
     *          5 Announcement is deleted
     */
    @Test (groups = {"smoke"})
    public void BO_Operations_Announcement_Management_004(){
        log("@title: Validate can add Edit and Delete Announcement");

        // Create a message on STG and PRO for run automation and hide the message
        String announcementMsg = "Message for run automation script. Please do NOT remove";
        String announcementMsgUpdate = announcementMsg + " Update";
        String seenBy = "Partner";

        log("Step 1. Access Operations > Announcement Management");
        AnnouncementManagementPage page = backofficeHomePage.navigateAnnouncementManagement();

        log("Step 2. Update the message");
        page.updateAnnouncementInfo(announcementMsg, AnnouncementManagementPage.Actions.EDIT,announcementMsgUpdate,"","");
        AlertMessageBox alMessage = new AlertMessageBox();
        String message = alMessage.getSuccessAlert();
        page.waitSpinIcon();

        log("Verify 1. Verify the message success after update");
        Assert.assertTrue( message.contains("Update Successful"),"FAILED! Update message is not displayed");

        log("Verify 2. Verify the message is updated correctly");
        Assert.assertTrue(page.verifyAnnouncementInfo(announcementMsg,"","",""),"FAILED! Incorrect info after create an announcement");


        log("Step 3. Update the message to the new message and click Save button");
        page.updateAnnouncementInfo(announcementMsgUpdate, AnnouncementManagementPage.Actions.EDIT,"",seenBy,"10");
        page.waitSpinIcon();

        log("Verify 3. Announcement message is update correctly");
        Assert.assertTrue(page.verifyAnnouncementInfo(announcementMsgUpdate,"",seenBy,"10"),"FAILED! Incorrect info after create an announcement");

        log("Step 8 Click on Del button of the message and confirm delete");
        page.updateAnnouncementInfo(announcementMsgUpdate, AnnouncementManagementPage.Actions.DELETE,"","","");

        log("Verify 5.1 Verify Message confirm is display");
        StaticConfirmPopup confirmPopup = StaticConfirmPopup.xpath("//app-dialog-confirm-announcement","div[@class='dialog']","button[@class='btn btn-core tool btn-confirm']");
        confirmPopup.isDisplayed(2);
        Assert.assertEquals(confirmPopup.getContent(),BOConstants.Operations.AnnouncementManagement.MSG_CONFIRM_DELETE_ANNOUNCEMENT,"FAILED! Confirm to delete message is incorrect");
        confirmPopup.confirm();

        log("Verify 5.2 Announcement is deleted");
        log("Verify 5.3 Announcement is not display");
        Assert.assertFalse(confirmPopup.isDisplayed(2),"FAILED! The issue does not display ");

        log("INFO: Executed completely");
    }


    /**
     * @title: Validate Clear button works
     * @pre-condition:
     *           1. Log in BO
     * @steps:  1. Access Operations > Announcement Management
     *          2. Enter message into English and Chines e textbox
     *          3. Click Clear button
     * @expect: 1. Verify data in English and Chinese textbox is cleared
     */
    @Test (groups = {"deprecated"})// the test case is remove Chine
    public void BO_Operations_Announcement_Management_002(){
        log("@title: Validate error popup display when create announcement without input any data");
        log("Step 1. Access Operations > Announcement Management");
        AnnouncementManagementPage page = backofficeHomePage.navigateAnnouncementManagement();

        log("Step 2. Enter message into English and Chines e textbox");
        page.txtEnglish.sendKeys("This is auto message input in English");
        page.txtTranslate.sendKeys("This is auto message input in Translate section");

        log("Step 3. Click Clear button");
        page.btnClear.click();

        log("Verify 1. Verify data in English and Chinese textbox is cleared");
        Assert.assertTrue(page.txtEnglish.getText().isEmpty(),"FAIELD! The message in English is not cleared");
        Assert.assertTrue(page.txtTranslate.getText().isEmpty(),"FAIELD! The message in Translate section is not cleared");

        log("INFO: Executed completely");
    }
    @TestRails(id = "1642")
    @Test (groups = {"regression"})
    public void BO_Operations_Announcement_Management_1642(){
        log("@title: Validate can search and navigate to page correctly");
        log("Step 1. Access Operations > Announcement Management");
        AnnouncementManagementPage page = backofficeHomePage.navigateAnnouncementManagement();

        log("Verify page title displays with Announcement Management");
        Assert.assertEquals("Announcement Management", page.lblTitlePage.getText(), "FAILED ! Page title is not displayed correctly, actual: " + page.lblTitlePage.getText());

        log("INFO: Executed completely");
    }
}
