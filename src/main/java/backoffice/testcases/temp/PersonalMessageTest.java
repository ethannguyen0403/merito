package backoffice.testcases.temp;

import com.paltech.utils.DateUtils;
import com.paltech.utils.StringUtils;
import backoffice.common.BOConstants;
import org.testng.Assert;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;
import backoffice.pages.bo._components.NotificationPopup;
import backoffice.pages.bo.temp.PersonalMessagePage;
import baseTest.BaseCaseMerito;

import java.util.Arrays;
import java.util.List;

public class PersonalMessageTest extends BaseCaseMerito{
    /**
     * @title: Validate can send a message successfully
     * @pre-condition:
     *           1. Log in successfully
     * @steps: 1. Access Operations > Personal Message
     *          2. Input Valid username or login ID : The agent account at control blocking level
     *          3. Subject, and the message and click on Send button
     *          4. Click on Viewing sent message view Today create message
     *          5. Login agent site - the account sent in step 2 and click on Inbox icon
     * @expect: 1. success message display: "Sent message successfully!"
     *          2. The message sent is display in Viewing sent message with correct data
     *          3. Verify message is sent for agent account
     *          4. Verify Private message display with correct content and subject. Create data match with BO site
     */
    @Test (groups = {"smoke"})
    @Parameters({"satSADAgentLoginID","memberPassword"})
    public void BO_Operations_Personal_Message_001(String satSADAgentLoginID, String memberPassword) throws Exception {
        log("@title: Validate can send a message successfully");
        log("Step 1. Access Operations > Personal Message");
        String subject = "Message of date " + DateUtils.getDate(0,"dd-MM-YYYY",BOConstants.GMT_FOUR)+ StringUtils.generateNumeric(5);
        String message = "The message is generated by auto script. Pls ignore it!";
        PersonalMessagePage page = backofficeHomePage.navigatePersonalMessage();

        log("Step 2. Input Valid username or login ID : The agent account at control blocking level");
        log("Step 3. Subject, and the message and click on Send button");
        page.sendMessage(satSADAgentLoginID,subject,message);

        log("Verify 1. success message display: \"Sent message successfully!\"");
        NotificationPopup popup = new NotificationPopup();
        Assert.assertEquals(popup.getMessage(),BOConstants.Operations.PersonalMessage.SUCCESS_SEND_MESSAGE,"FAILED! Success message display incorrect");

        log("Step 4. Click on Viewing sent message view Today create message");
        page.activeViewingSentMessage();

        log("Verify 2. The message sent is display in Viewing sent message with correct data");
        Assert.assertTrue(page.veifyMessageSent(message,satSADAgentLoginID),"FAILED! Message sent is incorrect");
        String createDate = DateUtils.formatDate(page.getSentMessageInfo(message).get(page.colDateTime-1),"yyyy-MM-dd HH:mm:ss","dd/MM/yyyy HH:mm:ss");
        List<String> msInfo = Arrays.asList(subject,message,createDate);

        log("Step 5. Login agent site - the account sent in step 2 and click on Inbox icon");
       // Helper.loginAgentIgnoreCaptchaTest(environment.getSatAgentSOSURL(),environment.getSatAgentSosValidationURL(),environment.getSatAgentDashboardURL(),satSADAgentLoginID,memberPassword,environment.getSecurityCode());
     /*   baseTest.BaseCaseMerito.loginAgent(environment.getSatAgentSOSURL(),environment.getSatAgentSecurityCodeUrl(),satSADAgentLoginID,memberPassword,environment.getSecurityCode());
        backofficeHomePage agentbackofficeHomePage = new backofficeHomePage();*/

        log("Verify 3. Verify message is sent for agent account");
        log("Verify 4. Verify Private message display with correct content and subject. Create data match with BO site");
        //pages.agent.home.PrivateMessagePage privatePage = agentbackofficeHomePage.navigatePrivateMessage();
      //  Assert.assertTrue(privatePage.verifyMessage(msInfo),"FAILED! Message info in agent site mismatch with created info");

        log("INFO: Executed completely");

    }


}
